// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using jim.wiki.back.infrastructure.Repository;

#nullable disable

namespace jim.wiki.back.infrastructure.Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("jim.wiki.back.model.Models.Users.Rol", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateadAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("Guid");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateadAt = new DateTime(2024, 7, 21, 8, 57, 38, 908, DateTimeKind.Utc).AddTicks(4428),
                            CreatedBy = "_System",
                            Description = "Admin",
                            Guid = new Guid("abc10fde-95db-4731-9e14-ee2e0fa7d1aa"),
                            IsDeleted = false,
                            LastAction = "Admin",
                            ModifiedAt = new DateTime(2024, 7, 21, 8, 57, 38, 908, DateTimeKind.Utc).AddTicks(4457),
                            ModifiedBy = "_System",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2L,
                            CreateadAt = new DateTime(2024, 7, 21, 8, 57, 38, 908, DateTimeKind.Utc).AddTicks(4509),
                            CreatedBy = "_System",
                            Description = "User",
                            Guid = new Guid("a94d144e-297e-45ff-bd4b-1e81c7470a0b"),
                            IsDeleted = false,
                            LastAction = "User",
                            ModifiedAt = new DateTime(2024, 7, 21, 8, 57, 38, 908, DateTimeKind.Utc).AddTicks(4510),
                            ModifiedBy = "_System",
                            Name = "User"
                        },
                        new
                        {
                            Id = 3L,
                            CreateadAt = new DateTime(2024, 7, 21, 8, 57, 38, 908, DateTimeKind.Utc).AddTicks(4513),
                            CreatedBy = "_System",
                            Description = "Guest",
                            Guid = new Guid("3623ea86-3b21-4527-949b-8b59bb7f93fe"),
                            IsDeleted = false,
                            LastAction = "Guest",
                            ModifiedAt = new DateTime(2024, 7, 21, 8, 57, 38, 908, DateTimeKind.Utc).AddTicks(4514),
                            ModifiedBy = "_System",
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("jim.wiki.back.model.Models.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 2L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateadAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("RolId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasAlternateKey("Guid");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateadAt = new DateTime(2024, 7, 21, 8, 57, 39, 29, DateTimeKind.Utc).AddTicks(1082),
                            CreatedBy = "_Systenm",
                            Email = "email@mail.com",
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            Hash = "$2a$11$jkBKuOyTqRNTIrFuUw2Cm.8vBcgTk4QvQi7TiFMHTkz39uBvZ530S",
                            IsDeleted = false,
                            LastAction = "Added",
                            ModifiedAt = new DateTime(2024, 7, 21, 8, 57, 39, 29, DateTimeKind.Utc).AddTicks(1086),
                            ModifiedBy = "_System",
                            Name = "Admin",
                            RolId = 1L
                        });
                });

            modelBuilder.Entity("jim.wiki.back.model.Models.Users.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ValidAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("jim.wiki.back.model.Models.Users.User", b =>
                {
                    b.HasOne("jim.wiki.back.model.Models.Users.Rol", "Rol")
                        .WithMany("Users")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("jim.wiki.back.model.Models.Users.UserToken", b =>
                {
                    b.HasOne("jim.wiki.back.model.Models.Users.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("jim.wiki.back.model.Models.Users.Rol", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("jim.wiki.back.model.Models.Users.User", b =>
                {
                    b.Navigation("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
